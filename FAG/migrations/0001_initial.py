# Generated by Django 5.1.7 on 2025-03-23 10:09

import FAG.models
import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fabbisogni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID_PianoInvestimenti', models.CharField(blank=True, max_length=200, null=True)),
                ('Avviato', models.BooleanField(default=False)),
                ('Progressivo', models.CharField(blank=True, max_length=100)),
                ('Direttore', models.CharField(blank=True, max_length=255)),
                ('Apparecchiatura', models.CharField(blank=True, max_length=255)),
                ('Mot1_1', models.BooleanField(default=False)),
                ('Mot1_2', models.BooleanField(default=False)),
                ('Mot1_3', models.BooleanField(default=False)),
                ('Mot2_1', models.BooleanField(default=False)),
                ('Mot2_2', models.BooleanField(default=False)),
                ('AggNota', models.CharField(blank=True, max_length=500)),
                ('Acquisto', models.BooleanField(default=False)),
                ('Service', models.BooleanField(default=False)),
                ('Noleggio', models.BooleanField(default=False)),
                ('Tecnologico', models.BooleanField(default=False)),
                ('Valutativo', models.BooleanField(default=False)),
                ('Temporaneo', models.BooleanField(default=False)),
                ('Economico', models.BooleanField(default=False)),
                ('Gestionale', models.BooleanField(default=False)),
                ('NotaNoleggio', models.CharField(blank=True, max_length=500)),
                ('NecInfraSi', models.BooleanField(default=False)),
                ('NecInfraNO', models.BooleanField(default=False)),
                ('NecInfraNota', models.CharField(blank=True, max_length=500)),
                ('SostNota', models.CharField(blank=True, max_length=500)),
                ('Data', models.DateTimeField(default='23/03/2025')),
                ('Fonte', models.CharField(blank=True, max_length=255)),
                ('Anno_Previsto', models.IntegerField(null=True)),
                ('Costo_Presunto_NOIVA', models.IntegerField(null=True)),
                ('Costo_Presunto_IVA', models.IntegerField(null=True)),
                ('NoteGen', models.CharField(blank=True, max_length=500)),
                ('Prezzo_acquisto', models.IntegerField(blank=True, null=True)),
                ('Prezzo_Noleggio', models.IntegerField(blank=True, null=True)),
                ('Prezzo_Service', models.IntegerField(blank=True, null=True)),
                ('Qta', models.IntegerField(default=None)),
                ('Simili', models.BooleanField(blank=True, default=False)),
                ('DescrMass', models.CharField(blank=True, max_length=5000, null=True)),
                ('NolMesi', models.IntegerField(blank=True, null=True)),
                ('NewPersSI', models.BooleanField(default=False)),
                ('NewPersNO', models.BooleanField(default=False)),
                ('PercIVA', models.IntegerField(null=True)),
                ('Eliminato', models.BooleanField(default=False)),
                ('NoteStato', models.TextField(blank=True, null=True)),
                ('AssegnPrior', models.IntegerField(blank=True, null=True)),
                ('primario_data', models.DateTimeField(blank=True, null=True)),
                ('dir_medica_data', models.DateTimeField(blank=True, null=True)),
                ('ing_clinico_data', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gruppi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Descrizione', models.CharField(max_length=500, unique=True)),
                ('Numero', models.IntegerField(default=0, unique=True)),
                ('FaVeTu', models.BooleanField(default=False)),
                ('FaVePr', models.BooleanField(default=False)),
                ('FaIns', models.BooleanField(default=False)),
                ('FaMoTu', models.BooleanField(default=False)),
                ('FaMoPr', models.BooleanField(default=False)),
                ('SpVeTu', models.BooleanField(default=False)),
                ('SpVePr', models.BooleanField(default=False)),
                ('SpInsPr', models.BooleanField(default=False)),
                ('SpInsTu', models.BooleanField(default=False)),
                ('SpMoTu', models.BooleanField(default=False)),
                ('SpMoPr', models.BooleanField(default=False)),
                ('GaVeTu', models.BooleanField(default=False)),
                ('GaVePr', models.BooleanField(default=False)),
                ('GaValTec', models.BooleanField(default=False)),
                ('GaValCli', models.BooleanField(default=False)),
                ('GaFlu', models.BooleanField(default=False)),
                ('PIVeTu', models.BooleanField(default=False)),
                ('PIVePr', models.BooleanField(default=False)),
                ('PIIns', models.BooleanField(default=False)),
                ('PIMod', models.BooleanField(default=False)),
                ('UbVe', models.BooleanField(default=False)),
                ('UbIns', models.BooleanField(default=False)),
                ('UbMod', models.BooleanField(default=False)),
                ('ProfVe', models.BooleanField(default=False)),
                ('ProfIns', models.BooleanField(default=False)),
                ('ProfMod', models.BooleanField(default=False)),
                ('PrVe', models.BooleanField(default=False)),
                ('PrIns', models.BooleanField(default=False)),
                ('PrMod', models.BooleanField(default=False)),
                ('ExSi', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NuovaRichiesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('File', models.FileField(upload_to='media')),
            ],
        ),
        migrations.CreateModel(
            name='Priorita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Numero', models.IntegerField(default=0, unique=True)),
                ('Descrizione', models.CharField(max_length=1200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Professioni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SeRep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sede', models.CharField(max_length=500)),
                ('Reparto', models.CharField(max_length=500)),
                ('Sub_Reparto', models.CharField(max_length=500)),
                ('CDC', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SeRepReg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sede', models.CharField(max_length=1000)),
                ('Reparto', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Sta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=500)),
                ('Numero', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ConsumabiliFabb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tipo', models.CharField(max_length=500)),
                ('CostoUnitario', models.IntegerField(default=0)),
                ('ConsumoMedio', models.IntegerField(default=0)),
                ('Periodo', models.IntegerField(default=0)),
                ('Totale', models.IntegerField(default=0)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.fabbisogni')),
            ],
        ),
        migrations.CreateModel(
            name='MAIN',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sede_Reparto', models.TextField(default='')),
                ('Progressivo', models.CharField(blank=True, max_length=100)),
                ('Direttore', models.CharField(blank=True, max_length=255)),
                ('Apparecchiatura', models.CharField(blank=True, max_length=255)),
                ('Mot1_1', models.BooleanField(default=False)),
                ('Mot1_2', models.BooleanField(default=False)),
                ('Mot1_3', models.BooleanField(default=False)),
                ('ValMot', models.CharField(choices=[('1', 'Congruo'), ('0', 'Non Congruo')], max_length=255, null=True)),
                ('ValMotNota', models.CharField(blank=True, max_length=1000)),
                ('ValData', models.DateTimeField(null=True)),
                ('Mot2_1', models.BooleanField(default=False)),
                ('Mot2_2', models.BooleanField(default=False)),
                ('AggNota', models.CharField(blank=True, max_length=500)),
                ('Acquisto', models.BooleanField(default=False)),
                ('Service', models.BooleanField(default=False)),
                ('Noleggio', models.BooleanField(default=False)),
                ('Tecnologico', models.BooleanField(default=False)),
                ('Valutativo', models.BooleanField(default=False)),
                ('Temporaneo', models.BooleanField(default=False)),
                ('Economico', models.BooleanField(default=False)),
                ('Gestionale', models.BooleanField(default=False)),
                ('NotaNoleggio', models.CharField(blank=True, max_length=500)),
                ('NecInfraSi', models.BooleanField(default=False)),
                ('NecInfraNO', models.BooleanField(default=False)),
                ('NecInfraNota', models.CharField(blank=True, max_length=500)),
                ('SostNota', models.CharField(blank=True, max_length=500)),
                ('Data', models.DateTimeField(default=datetime.datetime(2025, 3, 23, 11, 9, 30, 116066))),
                ('Fonte', models.CharField(blank=True, max_length=255)),
                ('Anno_Previsto', models.IntegerField(null=True)),
                ('Costo_Presunto_NOIVA', models.IntegerField(null=True)),
                ('Costo_Presunto_IVA', models.IntegerField(null=True)),
                ('Data1', models.DateTimeField(blank=True, null=True)),
                ('Data2', models.DateTimeField(blank=True, null=True)),
                ('Data3', models.DateTimeField(blank=True, null=True)),
                ('Data4', models.DateTimeField(blank=True, null=True)),
                ('Data5', models.DateTimeField(blank=True, null=True)),
                ('Data6', models.DateTimeField(blank=True, null=True)),
                ('Data7', models.DateTimeField(blank=True, null=True)),
                ('Data8', models.DateTimeField(blank=True, null=True)),
                ('Data9', models.DateTimeField(blank=True, null=True)),
                ('NoteGen', models.CharField(blank=True, max_length=500)),
                ('Prezzo_acquisto', models.IntegerField(blank=True, null=True)),
                ('Prezzo_Noleggio', models.IntegerField(blank=True, null=True)),
                ('Prezzo_Service', models.IntegerField(blank=True, null=True)),
                ('Qta', models.IntegerField(default=0)),
                ('MotivoAnnullamento', models.CharField(blank=True, max_length=255, null=True)),
                ('FileModuloRichiestaFirmato', models.FileField(null=True, upload_to='')),
                ('FileModuloValutazioneFirmato', models.FileField(null=True, upload_to='')),
                ('Simili', models.BooleanField(blank=True, default=False)),
                ('PercIVA', models.IntegerField(default=0)),
                ('NolMesi', models.IntegerField(blank=True, null=True)),
                ('NoteStato', models.TextField(blank=True, null=True)),
                ('FabbCopiato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.fabbisogni')),
            ],
        ),
        migrations.CreateModel(
            name='DocTrasp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=255)),
                ('N_pagine', models.IntegerField(default=0)),
                ('File', models.FileField(blank=True, null=True, upload_to=FAG.models.DocTrasp.generate_filename)),
                ('Descrizione', models.CharField(max_length=1000, null=True)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='DocGara',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=255)),
                ('N_pagine', models.IntegerField(default=0)),
                ('Descrizione', models.CharField(max_length=1000, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to=FAG.models.DocGara.generate_filename)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='DocComm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=255)),
                ('N_pagine', models.IntegerField(default=0)),
                ('Descrizione', models.CharField(max_length=1000, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to=FAG.models.DocComm.generate_filename)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='DocColl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=255)),
                ('N_pagine', models.IntegerField(default=0)),
                ('Descrizione', models.CharField(max_length=1000, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to=FAG.models.DocColl.generate_filename)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='DocAgg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nome', models.CharField(max_length=255)),
                ('N_pagine', models.IntegerField(default=0)),
                ('Descrizione', models.CharField(max_length=1000, null=True)),
                ('File', models.FileField(blank=True, null=True, upload_to=FAG.models.DocAgg.generate_filename)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='Ditta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NomeDitta', models.CharField(blank=True, max_length=400)),
                ('Rif', models.CharField(blank=True, max_length=100)),
                ('ContattoEM', models.EmailField(max_length=254)),
                ('ContattoTel', models.IntegerField()),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='Criteri',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rif', models.IntegerField(default=0)),
                ('Criterio', models.CharField(blank=True, max_length=255)),
                ('Peso', models.IntegerField(default=0)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumabiliMain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tipo', models.CharField(max_length=500)),
                ('CostoUnitario', models.IntegerField(default=0)),
                ('ConsumoMedio', models.IntegerField(default=0)),
                ('Periodo', models.IntegerField(default=0)),
                ('Totale', models.IntegerField(default=0)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='Allegati',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Allegato', models.CharField(blank=True, max_length=500)),
                ('N_pag', models.IntegerField(default=0)),
                ('File', models.FileField(upload_to=FAG.models.Allegati.generate_filename)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.CreateModel(
            name='PI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID_PianoInvestimenti', models.CharField(max_length=25)),
                ('Descrizione', models.CharField(blank=True, max_length=1000, null=True)),
                ('Anno_Previsto', models.IntegerField(default=0)),
                ('Speso', models.IntegerField(default=0, null=True)),
                ('Costo_Presunto_IVA', models.IntegerField(blank=True, null=True)),
                ('Stato', models.CharField(default='Inserito Nel Piano', max_length=500)),
                ('is_ext', models.BooleanField(default=False)),
                ('is_end', models.BooleanField(default=False)),
                ('is_full', models.BooleanField(default=False)),
                ('FabbRel', models.ManyToManyField(blank=True, to='FAG.fabbisogni')),
                ('Priorita', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.priorita')),
            ],
        ),
        migrations.AddField(
            model_name='main',
            name='ID_PianoInvestimenti',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.pi'),
        ),
        migrations.AddField(
            model_name='main',
            name='Priorita',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.priorita'),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='Priorita',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.priorita'),
        ),
        migrations.CreateModel(
            name='RichiestaStato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatoRic', models.CharField(choices=[('BOZZA', 'Bozza'), ('DEFINITIVA', 'Definitiva'), ('RIFIUTATA_DA_DIR', 'Rifiutata da Direzione'), ('MODIFICA', 'Modifica'), ('SPEDITA', 'Spedita'), ('NEGATA_DA_DAA', 'Negata da DAA'), ('APPROVATA', 'Approvata'), ('NON_APPROVATA', 'Non approvata')], default='BOZZA', max_length=20)),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('data_modifica', models.DateTimeField(auto_now=True)),
                ('NoteStato', models.TextField(blank=True, null=True)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.AddField(
            model_name='main',
            name='StatoRic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.richiestastato'),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='StatoRic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.richiestastato'),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='Sede_Reparto',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.serep'),
        ),
        migrations.CreateModel(
            name='Specifiche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Specifica', models.CharField(max_length=1000)),
                ('ValSpecCli', models.CharField(choices=[('OK', 'OK'), ('NO', 'NO'), ('NC', 'NC')], max_length=255, null=True)),
                ('ValSpecCliNota', models.CharField(blank=True, max_length=1000, null=True)),
                ('ValCliData', models.DateTimeField(blank=True, null=True)),
                ('ValSpecTec', models.CharField(choices=[('OK', 'OK'), ('NO', 'NO'), ('NC', 'NC')], max_length=255, null=True)),
                ('ValSpecTecNota', models.CharField(blank=True, max_length=1000, null=True)),
                ('ValTecData', models.DateTimeField(blank=True, null=True)),
                ('MotivoClinico', models.CharField(max_length=1000)),
                ('Un', models.BooleanField(default=False)),
                ('rif', models.IntegerField(default=0)),
                ('Min', models.BooleanField(default=False)),
                ('Max', models.BooleanField(default=False)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
            ],
        ),
        migrations.AddField(
            model_name='main',
            name='Stato',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.sta'),
        ),
        migrations.CreateModel(
            name='UrgenteRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Progressivo', models.CharField(blank=True, max_length=100)),
                ('Apparecchiatura', models.CharField(blank=True, max_length=255)),
                ('Qta', models.IntegerField(default=1)),
                ('Costo_Presunto_NOIVA', models.IntegerField(blank=True, null=True)),
                ('Costo_Presunto_IVA', models.IntegerField(blank=True, null=True)),
                ('Direttore', models.CharField(blank=True, max_length=255)),
                ('DescrMass', models.CharField(blank=True, max_length=5000, null=True)),
                ('Criterio', models.CharField(blank=True, max_length=255)),
                ('Peso', models.IntegerField(blank=True, default=0, null=True)),
                ('ContattoEM', models.EmailField(blank=True, max_length=254, null=True)),
                ('Tipo', models.CharField(blank=True, max_length=255)),
                ('ConsumoMedio', models.IntegerField(blank=True, default=0, null=True)),
                ('Periodo', models.IntegerField(blank=True, default=0, null=True)),
                ('CostoUnitario', models.IntegerField(blank=True, default=0, null=True)),
                ('NomeDitta', models.TextField(blank=True, default='', max_length=400)),
                ('ContattoTel', models.IntegerField(blank=True, default=0, null=True)),
                ('Nota', models.CharField(max_length=500, null=True)),
                ('Eliminato', models.BooleanField(default=False)),
                ('Mot1_1', models.BooleanField(default=False)),
                ('Mot1_2', models.BooleanField(default=False)),
                ('Mot1_3', models.BooleanField(default=False)),
                ('ValMot', models.CharField(choices=[('1', 'Congruo'), ('0', 'Non Congruo')], max_length=255, null=True)),
                ('ValMotNota', models.CharField(blank=True, max_length=1000)),
                ('ValData', models.DateTimeField(null=True)),
                ('Mot2_1', models.BooleanField(default=False)),
                ('Mot2_2', models.BooleanField(default=False)),
                ('AggNota', models.CharField(blank=True, max_length=500)),
                ('Acquisto', models.BooleanField(default=False)),
                ('Service', models.BooleanField(default=False)),
                ('Noleggio', models.BooleanField(default=False)),
                ('Tecnologico', models.BooleanField(default=False)),
                ('Valutativo', models.BooleanField(default=False)),
                ('Temporaneo', models.BooleanField(default=False)),
                ('Economico', models.BooleanField(default=False)),
                ('Gestionale', models.BooleanField(default=False)),
                ('NotaNoleggio', models.CharField(blank=True, max_length=500)),
                ('NecInfraSi', models.BooleanField(default=False)),
                ('NecInfraNO', models.BooleanField(default=False)),
                ('NecInfraNota', models.CharField(blank=True, max_length=500)),
                ('SostNota', models.CharField(blank=True, max_length=500)),
                ('Data', models.DateTimeField(default=django.utils.timezone.now)),
                ('Fonte', models.CharField(blank=True, max_length=255)),
                ('Anno_Previsto', models.IntegerField(null=True)),
                ('NoteStato', models.TextField(blank=True, null=True)),
                ('Data1', models.DateTimeField(blank=True, null=True)),
                ('Data2', models.DateTimeField(blank=True, null=True)),
                ('Data3', models.DateTimeField(blank=True, null=True)),
                ('Data4', models.DateTimeField(blank=True, null=True)),
                ('Data5', models.DateTimeField(blank=True, null=True)),
                ('Data6', models.DateTimeField(blank=True, null=True)),
                ('Data7', models.DateTimeField(blank=True, null=True)),
                ('Data8', models.DateTimeField(blank=True, null=True)),
                ('Data9', models.DateTimeField(blank=True, null=True)),
                ('NoteGen', models.CharField(blank=True, max_length=500)),
                ('Prezzo_acquisto', models.IntegerField(blank=True, null=True)),
                ('Prezzo_Noleggio', models.IntegerField(blank=True, null=True)),
                ('Prezzo_Service', models.IntegerField(blank=True, null=True)),
                ('MotivoAnnullamento', models.CharField(blank=True, max_length=255, null=True)),
                ('FileModuloRichiestaFirmatoUrgente', models.FileField(blank=True, null=True, upload_to='')),
                ('FileModuloValutazioneFirmatoUrgente', models.FileField(null=True, upload_to='')),
                ('Simili', models.BooleanField(blank=True, default=False)),
                ('PercIVA', models.IntegerField(default=0)),
                ('NolMesi', models.IntegerField(blank=True, null=True)),
                ('primario_data', models.DateTimeField(blank=True, null=True)),
                ('dir_medica_data', models.DateTimeField(blank=True, null=True)),
                ('ing_clinico_data', models.DateTimeField(blank=True, null=True)),
                ('Specifica', models.CharField(blank=True, default='Non specificato', max_length=1000, null=True)),
                ('ValSpecCli', models.CharField(choices=[('OK', 'OK'), ('NO', 'NO'), ('NC', 'NC')], max_length=255, null=True)),
                ('ValSpecCliNota', models.CharField(blank=True, max_length=1000, null=True)),
                ('ValCliData', models.DateTimeField(blank=True, null=True)),
                ('ValSpecTec', models.CharField(choices=[('OK', 'OK'), ('NO', 'NO'), ('NC', 'NC')], max_length=255, null=True)),
                ('ValSpecTecNota', models.CharField(blank=True, max_length=1000, null=True)),
                ('ValTecData', models.DateTimeField(blank=True, null=True)),
                ('MotivoClinico', models.CharField(blank=True, default='Non specificato', max_length=1000, null=True)),
                ('Un', models.BooleanField(default=False)),
                ('rif', models.IntegerField(blank=True, default=0, null=True)),
                ('Min', models.BooleanField(blank=True, default=False, null=True)),
                ('Max', models.BooleanField(blank=True, default=False, null=True)),
                ('FabbCopiato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.fabbisogni')),
                ('ID_PianoInvestimenti', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.pi')),
                ('Sede_Reparto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.serep')),
                ('Stato', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.sta')),
                ('StatoRic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.richiestastato')),
            ],
        ),
        migrations.CreateModel(
            name='SpecificheUrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Specifica', models.CharField(max_length=1000)),
                ('ValSpecCli', models.CharField(choices=[('OK', 'OK'), ('NO', 'NO'), ('NC', 'NC')], max_length=255, null=True)),
                ('ValSpecCliNota', models.CharField(blank=True, max_length=1000, null=True)),
                ('ValCliData', models.DateTimeField(blank=True, null=True)),
                ('ValSpecTec', models.CharField(choices=[('OK', 'OK'), ('NO', 'NO'), ('NC', 'NC')], max_length=255, null=True)),
                ('ValSpecTecNota', models.CharField(blank=True, max_length=1000, null=True)),
                ('ValTecData', models.DateTimeField(blank=True, null=True)),
                ('MotivoClinico', models.CharField(max_length=1000)),
                ('Un', models.BooleanField(default=False)),
                ('rif', models.IntegerField(default=0)),
                ('Min', models.BooleanField(default=False)),
                ('Max', models.BooleanField(default=False)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.urgenterequest')),
            ],
        ),
        migrations.CreateModel(
            name='DittaUrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NomeDitta', models.CharField(blank=True, max_length=400)),
                ('Rif', models.CharField(blank=True, max_length=100)),
                ('ContattoEM', models.EmailField(max_length=254)),
                ('ContattoTel', models.IntegerField()),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.urgenterequest')),
            ],
        ),
        migrations.CreateModel(
            name='CriteriUrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rif', models.IntegerField(default=0)),
                ('Criterio', models.CharField(blank=True, max_length=255)),
                ('Peso', models.IntegerField(default=0)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.urgenterequest')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumabiliUrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tipo', models.CharField(max_length=500)),
                ('CostoUnitario', models.IntegerField(default=0)),
                ('ConsumoMedio', models.IntegerField(default=0)),
                ('Periodo', models.IntegerField(default=0)),
                ('Totale', models.IntegerField(default=0)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.urgenterequest')),
            ],
        ),
        migrations.CreateModel(
            name='AllegatiUrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Allegato', models.CharField(blank=True, max_length=500)),
                ('N_pag', models.IntegerField(default=0)),
                ('File', models.FileField(upload_to=FAG.models.AllegatiUrg.generate_filename)),
                ('ID_rich', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.urgenterequest')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('Nome', models.CharField(max_length=500)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('Cognome', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=254)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('Gruppo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.gruppi')),
                ('Profilo_Professionale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.professioni')),
                ('Sede_Reparto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='FAG.serepreg')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='Compilatore',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='ValCliUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoreclinicou', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='ValTecUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoretecnicou', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='ValUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatore_urgente', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='dir_medica_utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir_medica_urgente', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='ing_clinico_utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ing_clinico_urgente', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='urgenterequest',
            name='primario_utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primario_urgente', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='UnicitaUrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValCli', models.CharField(max_length=500, null=True)),
                ('ValCliData', models.DateTimeField(blank=True, null=True)),
                ('ValTec', models.CharField(max_length=500, null=True)),
                ('ValTecData', models.DateTimeField(blank=True, null=True)),
                ('Nota', models.CharField(max_length=500, null=True)),
                ('rifext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.specificheurg')),
                ('ID_rich', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.urgenterequest')),
                ('ValCliUtente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoreclinicourg', to=settings.AUTH_USER_MODEL)),
                ('ValTecUtente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoretecnicourg', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Unicita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValCli', models.CharField(max_length=500, null=True)),
                ('ValCliData', models.DateTimeField(blank=True, null=True)),
                ('ValTec', models.CharField(max_length=500, null=True)),
                ('ValTecData', models.DateTimeField(blank=True, null=True)),
                ('Nota', models.CharField(max_length=500, null=True)),
                ('ID_rich', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='FAG.main')),
                ('rifext', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FAG.specifiche')),
                ('ValCliUtente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoreclinico', to=settings.AUTH_USER_MODEL)),
                ('ValTecUtente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoretecnico', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='specificheurg',
            name='ValCliUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoreclinicosurg', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='specificheurg',
            name='ValTecUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoretecnicosurg', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='specifiche',
            name='ValCliUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoreclinicos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='specifiche',
            name='ValTecUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatoretecnicos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='richiestastato',
            name='utente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notifiche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Data', models.DateTimeField(null=True)),
                ('Letto', models.BooleanField(default=False)),
                ('Messaggio', models.CharField(max_length=1000)),
                ('User', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificaFAB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stato_richiesta', models.CharField(choices=[('BOZZA', 'Bozza'), ('DEFINITIVA', 'Definitiva'), ('RIFIUTATA_DA_DIR', 'Rifiutata da Direzione'), ('MODIFICA', 'Modifica'), ('SPEDITA', 'Spedita'), ('NEGATA_DA_DAA', 'Negata da DAA'), ('APPROVATA', 'Approvata'), ('NON_APPROVATA', 'Non approvata')], max_length=20)),
                ('messaggio', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('letta', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('utente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='main',
            name='Compilatore',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='main',
            name='ValUtente',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='valutatore', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='Compilatore',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='dir_medica_utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dir_medica_fabb', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='ing_clinico_utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ing_clinico_fabb', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fabbisogni',
            name='primario_utente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primario_fabb', to=settings.AUTH_USER_MODEL),
        ),
    ]
